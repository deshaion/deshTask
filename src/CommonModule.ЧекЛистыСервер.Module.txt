
Функция ДобавитьЧекЛист(пЭтаФорма, ЗНАЧ пСсылка, пГруппаРодитель = Неопределено, ЭлементПеред = Неопределено, НеПроверятьНаличиеПунктов = Ложь) Экспорт 
	Если пСсылка.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	лГруппаЧекЛист = пЭтаФорма.Элементы.Найти("ГруппаЧекЛист");
	
	Если лГруппаЧекЛист = Неопределено Тогда
		// Создадим сначала группу чек листа
		лЭлементПеред = Неопределено;
		лГруппаРодитель = Неопределено;
		
		
		Если НЕ ЭлементПеред = Неопределено Тогда
			лЭлементПеред = пЭтаФорма.Элементы[ЭлементПеред];
		КонецЕсли;
		
		Если НЕ пГруппаРодитель = Неопределено Тогда
			лГруппаРодитель = пЭтаФорма.Элементы[пГруппаРодитель];
		КонецЕсли;
		
		лГруппаЧекЛист = пЭтаФорма.Элементы.Вставить("ГруппаЧекЛист", Тип("ГруппаФормы"), лГруппаРодитель, лЭлементПеред);
		
		лГруппаЧекЛист.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		лГруппаЧекЛист.Отображение = ОтображениеОбычнойГруппы.Линия;
		//лГруппаЧекЛист.ОтображатьЗаголовок = Ложь;
		лГруппаЧекЛист.Заголовок = "";
	КонецЕсли;
	
	Если НЕ НеПроверятьНаличиеПунктов Тогда
		// проверим наличие пунктов
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Первые 1 Пункт
		|ИЗ РегистрСведений.ЧекЛист КАК ЧекЛист
		|ГДЕ Ссылка = &Ссылка";
		
		запрос.УстановитьПараметр("Ссылка", пСсылка);
		
		Если Запрос.Выполнить().Пустой() Тогда
			Если пЭтаФорма.Элементы.Найти("НадписьЧекЛист") = Неопределено Тогда
				// По идее надо удалить все предыдущие элементы
				// но мы изменим только видимость
				УстановитьВидимостьЭлементов(пЭтаФорма, ПолучитьМассивЭлементовЧеклиста(), Ложь);
				
				// создадим надпись для добавления чек листа
				текЭлемент = пЭтаФорма.Элементы.Добавить("НадписьЧекЛист", Тип("ДекорацияФормы"), лГруппаЧекЛист);
				текЭлемент.Вид = ВидДекорацииФормы.Надпись;
				текЭлемент.Заголовок = "Добавить чек-лист";
				текЭлемент.Гиперссылка = Истина;
				текЭлемент.РастягиватьПоГоризонтали = Истина;
				текЭлемент.Установитьдействие("Нажатие", "ЧекЛистНажатие");
			КонецЕсли;
			
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если пЭтаФорма.Элементы.Найти("ЭлементыЧекЛиста") = Неопределено Тогда
		ДобавитьЭлементыЧекЛиста(пЭтаФорма, пСсылка);
	Иначе
		// проверим их видимость
		УстановитьВидимостьЭлементов(пЭтаФорма, ПолучитьМассивЭлементовЧеклиста(), Истина);
		
		Для каждого лЭлемент Из пЭтаФорма.ЭлементыЧекЛиста.Отбор.Элементы Цикл
			Если лЭлемент.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка") Тогда
				лЭлемент.ПравоеЗначение = пСсылка;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецФункции // ДобавитьЧекЛист()

Функция УстановитьВидимостьЭлементов(пЭтаФорма, массивЭлементов, пВидимость = Истина)
	Для каждого текЭлемент Из массивЭлементов Цикл
		Если НЕ пЭтаФорма.Элементы.Найти(текЭлемент) = Неопределено Тогда
			пЭтаФорма.Элементы[текЭлемент].Видимость = пВидимость;
		КонецЕсли;
	КонецЦикла;
КонецФункции // УстановитьВидимостьЭлементов()

Функция ПолучитьМассивЭлементовЧеклиста()
	рез = Новый Массив;
	рез.Добавить("ПунктЧекЛиста");
	рез.Добавить("ЭлементыЧекЛиста");
	
	Возврат рез;
КонецФункции // ПолучитьМассивЭлементовЧеклиста()

///////////////////////////////////////////////////////////////////////////

Функция ДобавитьЭлементыЧекЛиста(пЭтаФорма, пСсылка) Экспорт 
	лГруппаЧекЛист = пЭтаФорма.Элементы["ГруппаЧекЛист"];
	
	// Сначала проверим наличие элеметов Чек листа
	// если они есть, то выводим их. если нету, создаем надпись для добавления чек-листа
	лРеквизитФормы = Новый РеквизитФормы("ЭлементыЧекЛиста", Новый ОписаниеТипов("ДинамическийСписок"));
	лРеквизитФормы1 = Новый РеквизитФормы("ПунктЧекЛиста", Новый ОписаниеТипов("Строка"));
	
	добавляемыеРеквизиты = Новый Массив;
	добавляемыеРеквизиты.Добавить(лРеквизитФормы);
	добавляемыеРеквизиты.Добавить(лРеквизитФормы1);
	
	пЭтаФорма.ИзменитьРеквизиты(добавляемыеРеквизиты);
	
	ДинСписок = пЭтаФорма.ЭлементыЧекЛиста;
	ДинСписок.ДинамическоеСчитываниеДанных = Истина;
	ДинСписок.ОсновнаяТаблица = "РегистрСведений.ЧекЛист";
	
	новыйЭлементОтбора = ДинСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	новыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	новыйЭлементОтбора.ПравоеЗначение = пСсылка;
	
	новыйПорядок = ДинСписок.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	новыйПорядок.Поле = Новый ПолеКомпоновкиДанных("Выполнено");
	
	новыйПорядок = ДинСписок.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	новыйПорядок.Поле = Новый ПолеКомпоновкиДанных("Порядок");
	
	текЭлемент = пЭтаФорма.Элементы.Добавить("ПунктЧекЛиста", Тип("ПолеФормы"), лГруппаЧекЛист);
	текЭлемент.Вид 					= ВидПоляФормы.ПолеВвода;
	текЭлемент.ПутьКДанным 			= "ПунктЧекЛиста";
	текЭлемент.ПоложениеЗаголовка 	= ПоложениеЗаголовкаЭлементаФормы.Право;
	текЭлемент.Заголовок = "<- Введите новый пункт";
	текЭлемент.Установитьдействие("АвтоПодбор", "НовыйПунктАвтоПодбор");
	текЭлемент.Установитьдействие("ПриИзменении", "НовыйПунктПриИзменении");
	
	элЧекЛиста = пЭтаФорма.Элементы.Добавить("ЭлементыЧекЛиста", Тип("ТаблицаФормы"), лГруппаЧекЛист);
	элЧекЛиста.ПутьКДанным = "ЭлементыЧекЛиста";
	элЧекЛиста.ИзменятьСоставСтрок = Ложь;
	элЧекЛиста.ИзменятьПорядокСтрок = Ложь;
	элЧекЛиста.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	элЧекЛиста.Высота = 4;
	элЧекЛиста.ПутьКДаннымКартинкиСтроки = "ЭлементыЧекЛиста.Порядок";
	элЧекЛиста.КартинкаСтрок = БиблиотекаКартинок.ПустаяКартинка;
	
	элЧекЛиста.Установитьдействие("Выбор", "ЧекЛистВыбор");
	
	текЭлемент = пЭтаФорма.Элементы.Добавить("ЭлементыЧекЛистаВыполнено", Тип("ПолеФормы"), элЧекЛиста);
	текЭлемент.ПутьКДанным = "ЭлементыЧекЛиста.Выполнено";
	текЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	текЭлемент.Заголовок = " ";
	
	текЭлемент = пЭтаФорма.Элементы.Добавить("ЭлементыЧекЛистаПункт", Тип("ПолеФормы"), элЧекЛиста);
	текЭлемент.ПутьКДанным = "ЭлементыЧекЛиста.Пункт";
	текЭлемент.Заголовок = "Чек-лист";
КонецФункции // ДобавитьЭлементыЧекЛиста()

Функция ЗаписатьНовыйПункт(пПункт, пСсылка, пНовыйТекстЗаголовка = Неопределено) Экспорт 
	Если НЕ ЗначениеЗаполнено(пПункт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЧекЛист.Порядок КАК Порядок
	               |ИЗ
	               |	РегистрСведений.ЧекЛист КАК ЧекЛист
	               |ГДЕ
	               |	ЧекЛист.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Порядок УБЫВ";
	
	Запрос.УстановитьПараметр("Ссылка", пСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		МаксПорядок = Выборка.Порядок + 1;
	КонецЕсли;
	
	новаяЗапись = РегистрыСведений.ЧекЛист.СоздатьМенеджерЗаписи();
	
	новаяЗапись.Пункт = Справочники.ПунктЧекЛиста.ПолучитьЭлементЧекЛистаПоСтроке(пПункт, пСсылка);
	новаяЗапись.Ссылка = пСсылка;
	новаяЗапись.Порядок = МаксПорядок;
	
	новаяЗапись.Записать();
	
	//itl.ermakov [25.05.2012] {{
	Если пНовыйТекстЗаголовка <> Неопределено Тогда
		пНовыйТекстЗаголовка = ПолучитьТекстЗаголовка(пСсылка); 	
	КонецЕсли;
	//}}itl.ermakov [25.05.2012]
	
	//itl.ermakov [25.05.2012] {{
	Если ТипЗнч(пСсылка) = Тип("СправочникСсылка.Дело") Тогда
		НастройкиПользователя = Пользователи.ПолучитьНастройкиПользователя();
		Если НастройкиПользователя.Свойство("ЧекЛист_АвтоКонтрольЧекЛистаПриДобавленииПункта") И НастройкиПользователя.ЧекЛист_АвтоКонтрольЧекЛистаПриДобавленииПункта Тогда
			Если Не Статусы.ПолучитьЗначениеРеквизита(пСсылка, "флРешатьТолькоПослеВыполненияЧекЛиста") Тогда
				ДелоОбъект = пСсылка.ПолучитьОбъект();
				ДелоОбъект.флРешатьТолькоПослеВыполненияЧекЛиста = Истина;
				ДелоОбъект.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//}}itl.ermakov [25.05.2012]
	
	пПункт = "";
	
	Возврат Истина;
КонецФункции // ЗаписатьНовыйПункт()

Функция УстановитьСнятьВыполнено(пВыбраннаяСтрока, пНовыйТекстЗаголовка = Неопределено) Экспорт 
	пПункт = пВыбраннаяСтрока.Пункт;
	Если НЕ ЗначениеЗаполнено(пПункт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	наборЗаписей = РегистрыСведений.ЧекЛист.СоздатьНаборЗаписей();
	
	наборЗаписей.Отбор.Пункт.Установить(пПункт);
	наборЗаписей.Отбор.Ссылка.Установить(пВыбраннаяСтрока.Ссылка);
	наборЗаписей.Прочитать();
	
	Если наборЗаписей.Количество() > 0 Тогда
		новаяЗапись = наборЗаписей[0];
	КонецЕсли;
	
	Если новаяЗапись = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	новаяЗапись.Выполнено = НЕ новаяЗапись.Выполнено;
	
	наборЗаписей.Записать();
	
	//itl.ermakov [25.05.2012] {{
	Если пНовыйТекстЗаголовка <> Неопределено Тогда
		пНовыйТекстЗаголовка = ПолучитьТекстЗаголовка(пВыбраннаяСтрока.Ссылка); 	
	КонецЕсли;
	//}}itl.ermakov [25.05.2012]
	
	Возврат Истина;
КонецФункции // УстановитьСнятьВыполнено()

///////////////////////////////////////////////////////////////////////////

Функция ОбновитьЗаголовокЧелЛиста(пЗаголовокЧекЛиста, пСсылка) Экспорт
	
	//itl.ermakov [24.05.2012] {{
	
	пЗаголовокЧекЛиста = ПолучитьТекстЗаголовка(пСсылка);
	
	//}}itl.ermakov [24.05.2012]
	
КонецФункции

Функция ПолучитьТекстЗаголовка(пСсылка) Экспорт
	
	//itl.ermakov [24.05.2012] {{
	
	ТекстЗаголовка = НСтр("ru = 'Чек-лист'");
	
	СтруктураПунктов = ПолучитьКоличествоПунктов(пСсылка);
	
	ТекстЗаголовка = ТекстЗаголовка + " ("+Формат(СтруктураПунктов.Выполнено, "ЧН=")+"/"+Формат(СтруктураПунктов.Всего, "ЧН=")+")";			
	
	Возврат ТекстЗаголовка;
	
	//}}itl.ermakov [24.05.2012]
	
КонецФункции

Функция ПолучитьКоличествоПунктов(пСсылка) Экспорт
	
	//itl.ermakov [24.05.2012] {{
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Структура("Выполнено, Всего",0,0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(1) КАК Всего,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЧекЛист.Выполнено
	               |				ТОГДА 1
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Выполнено,
	               |	ЧекЛист.Ссылка
	               |ИЗ
	               |	РегистрСведений.ЧекЛист КАК ЧекЛист
	               |ГДЕ
	               |	ЧекЛист.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЧекЛист.Ссылка";
	Запрос.УстановитьПараметр("Ссылка", пСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ЗаполнитьЗначенияСвойств(Результат, РезультатЗапроса.Выгрузить()[0]);
	КонецЕсли;
	
	Возврат Результат;
	
	//}}itl.ermakov [24.05.2012]
	
КонецФункции

Функция ВсеПунктыЧекЛистаЗакрыты(пСсылка) Экспорт
	Пункты = ПолучитьКоличествоПунктов(пСсылка);
	Возврат Пункты.Выполнено = Пункты.Всего;
КонецФункции