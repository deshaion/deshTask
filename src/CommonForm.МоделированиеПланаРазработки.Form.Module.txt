&НаКлиенте
Перем ЦветаПроектов;

&НаКлиенте
Перем ИндексЦвета;

&НаКлиенте
Перем Предшественники;

&НаКлиенте
Процедура Период(Команда)
	УстановитьПериодГантта(ДиграммаГанта, , МасштабДиаграммыГанта);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодГантта(Диаграмма, Период = Неопределено, Регулятор = Неопределено, СброситьМасштаб = Ложь)
	Если Период = Неопределено Тогда
		Период = ТипЕдиницыШкалыВремени.День;
	КонецЕсли;
	
	Шкала = Диаграмма.ОбластьПостроения.ШкалаВремени;
	 
	Для каждого Элемент Из Шкала.Элементы Цикл			
		Если НЕ СброситьМасштаб Тогда      
			Элемент.Единица = Период;		
		Иначе
			Элемент.Единица = ТипЕдиницыШкалыВремени.Месяц; // значение по умолчанию
		КонецЕсли; 		
	КонецЦикла; 
	
	Если НЕ СброситьМасштаб Тогда      
		Диаграмма.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
		Диаграмма.КратностьПериодическогоВарианта = 10; // эмпирическая величина ;-)
		Диаграмма.ЕдиницаПериодическогоВарианта = Период;
	Иначе
		Диаграмма.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Месяц;
		Диаграмма.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.ВсеДанные; 				
	КонецЕсли;     	
	
	Если НЕ Регулятор = Неопределено Тогда      
		Если НЕ СброситьМасштаб Тогда      
			Регулятор = Диаграмма.КратностьПериодическогоВарианта; 	
		Иначе
			Регулятор = 10;
		КонецЕсли; 		
	КонецЕсли;
КонецПроцедуры // УстановитьПериодГантта()

&НаКлиенте
Процедура МасштабДиаграммыГантаПриИзменении(Элемент)
	ИзменитьМасштабГантта(ДиграммаГанта, МасштабДиаграммыГанта);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьМасштабГантта(Диаграмма, Регулятор)
// Изменяет масштаб диаграммы Гантта в зависимости от положения регулятора
//
// Параметры:
//  Диаграмма  – Тип: ДиаграммаГаннта, собственно диаграмма
//  Регулятор  – Тип: Число, реквизит, связанный с регулятором масштаба на форме
//  ТекКнопка  - Тип: КнопкаКоманднойПанели, которая устанавливала масштаб в прошлый раз
//
	Если Регулятор <= 0 Тогда      
		Возврат;
	КонецЕсли; 
	
	Диаграмма.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Период;
	Диаграмма.КратностьПериодическогоВарианта = Регулятор; 		
	
КонецПроцедуры // ИзменитьМасштабГантта()

&НаКлиенте
Функция ДобавитьИнтервалДиаграммыГантта(Диаграмма, СтрокаДерева, ТаблицаКэш, КоличествоУровней, массивцветов, СерияГаннта = Неопределено, ТочкаРодитель = Неопределено)
// Рекурсивная функция для вывода интервалов на диаграмму Гантта
//
// Параметры:
//  Диаграмма  - Тип: ДиаграммаГантта, - собственно диаграмма
//  СтрокаДерева  – Тип: СтрокаДереваЗначений, – исходные данные интервала
//  СерияГантта  – Тип: СерияДиаграммыГантта, – текущая серия ветки дерева
//  ТочкаРодитель  - Тип: ТочкаДиаграммыГантта, - точка, которой подчинён интервал
//  ТаблицаКэш  - Тип: Соответствие, - служит для сохранения соответствия между точкой и объектом и именем серии и 
//  КоличествоУровней  - Тип: Число, количество уровней точек диаграммы (возвращаемый)
//
// Возвращаемое значение:
//   ТочкаДиаграммыГантта   – точка, добавленная в диаграмму
//

	ИмяСерии = "Главная";
	
	возвращаемоеЗначение = Неопределено;
	
	Точка = ТаблицаКэш[СтрокаДерева.Задача];
	
	Если Точка = Неопределено Тогда
		Если ТочкаРодитель = Неопределено Тогда
			Точка = Диаграмма.Точки.Добавить();
		Иначе
			Точка = ТочкаРодитель.Точки.Добавить();
		КонецЕсли;
	КонецЕсли;
	
	//Если СтрокаДерева.ПоказыватьКартинку Тогда      
	//	Точка.Картинка = БиблиотекаКартинок[СтрокаДерева.ИмяКартинки];
	//КонецЕсли; 
	
	//Точка.Расшифровка 	= СтрокаДерева.Объект;
	//Точка.Значение 		= СтрокаДерева.Объект;
	Точка.Текст 		= СтрокаДерева.Задача;
	///Точка.Цвет 			= ЦветаССервера.упоЦветДиаграммыГанттаЗадачаЗапланирована;
	
	//Если СтрокаДерева.МенятьЦветТекста Тогда      
	//	Точка.ЦветТекста = СтрокаДерева.ЦветТекста;
	//КонецЕсли;
	
	ТаблицаКэш.Вставить(СтрокаДерева.Задача, Точка);
	
	возвращаемоеЗначение = Точка;
		
	Если ЗначениеЗаполнено(ИмяСерии) Тогда
		СерияГаннта = ТаблицаКэш[ИмяСерии];
		Если СерияГаннта = Неопределено Тогда
			СерияГаннта = Диаграмма.Серии.Добавить();
			
			ТаблицаКэш.Вставить(ИмяСерии, СерияГаннта);
		КонецЕсли;
		
		Если возвращаемоеЗначение = Неопределено Тогда
			возвращаемоеЗначение = СерияГаннта;
		КонецЕсли;
	КонецЕсли;
	
	//Если СтрокаДерева.ЭтоИнтервал Тогда
		ЗначениеГантт = Диаграмма.ПолучитьЗначение(Точка, СерияГаннта);
		//ЗначениеГантт.Текст = СтрокаДерева.Подпись;
		//ЗначениеГантт.ЦветТекста = СтрокаДерева.ЦветПодписи;
		
		ЗначениеГантт.Текст = ЗначениеГантт.Текст + ?(пустаяСтрока(ЗначениеГантт.Текст), "", "; ") + СтрокаДерева.Проект;
		
		Интервал = ЗначениеГантт.Добавить();
	
		Интервал.Начало = СтрокаДерева.ДатаНачала;
		Если ЗначениеЗаполнено(НачалоДня(СтрокаДерева.ДатаЗавершения)) Тогда      
			Интервал.Конец = СтрокаДерева.ДатаЗавершения;	
		Иначе
			Интервал.Конец = НачалоДня(СтрокаДерева.ДатаЗавершения);
		КонецЕсли; 
		
		Если ИндексЦвета = Неопределено Тогда
			ИндексЦвета = 0;
		КонецЕсли;
		
		Интервал.Цвет = массивцветов[ИндексЦвета];
		ИндексЦвета = ИндексЦвета + 1;
		
		Если ЦветаПроектов = Неопределено Тогда
			ЦветаПроектов = Новый Соответствие;
		КонецЕсли;
		ЦветаПроектов.Вставить(СтрокаДерева.Проект, Интервал.Цвет);
		
		//Если НЕ ТаблицаКэш = Неопределено Тогда      
		//	ТаблицаКэш.Вставить(СтрокаДерева.Задача, Интервал);
		//КонецЕсли;
		Интервал.Текст = СтрокаДерева.Проект;
		
		Если возвращаемоеЗначение = Неопределено Тогда
			возвращаемоеЗначение = Интервал;
		КонецЕсли;
	//КонецЕсли;
	
	Для каждого СтрокаНиже Из СтрокаДерева.ПолучитьЭлементы() Цикл
		НечтоНиже = ДобавитьИнтервалДиаграммыГантта(Диаграмма, СтрокаНиже, ТаблицаКэш, КоличествоУровней, массивцветов, СерияГаннта, Точка);
		Если НЕ НечтоНиже = Неопределено Тогда
			КоличествоУровней = Макс(КоличествоУровней, НечтоНиже.Уровень());
		КонецЕсли;
	КонецЦикла; 
	
	Возврат возвращаемоеЗначение;

КонецФункции // обДобавитьИнтервалДиаграммыГантта()
 
&НаКлиенте
Функция ЗаполнитьМассивЦветов()
	МассивЦветов = Новый Массив;
	
	МассивЦветов.Добавить(WebЦвета.Аквамарин);
	МассивЦветов.Добавить(WebЦвета.АкварельноСиний);
	//МассивЦветов.Добавить(WebЦвета.АнтикБелый);
	МассивЦветов.Добавить(WebЦвета.Бежевый);
	//МассивЦветов.Добавить(WebЦвета.Белоснежный);
	МассивЦветов.Добавить(WebЦвета.Бирюзовый);
	МассивЦветов.Добавить(WebЦвета.БледноБирюзовый);
	МассивЦветов.Добавить(WebЦвета.БледноЗеленый);
	МассивЦветов.Добавить(WebЦвета.БледноЗолотистый);
	МассивЦветов.Добавить(WebЦвета.БледноКрасноФиолетовый);
	МассивЦветов.Добавить(WebЦвета.БледноЛиловый);
	МассивЦветов.Добавить(WebЦвета.БледноМиндальный);
	МассивЦветов.Добавить(WebЦвета.БледноСиреневый);
	МассивЦветов.Добавить(WebЦвета.Васильковый);
	МассивЦветов.Добавить(WebЦвета.ВесеннеЗеленый);
	МассивЦветов.Добавить(WebЦвета.Голубой);
	МассивЦветов.Добавить(WebЦвета.ГолубойСКраснымОттенком);
	МассивЦветов.Добавить(WebЦвета.ГолубойСоСтальнымОттенком);
	МассивЦветов.Добавить(WebЦвета.ГрифельноСерый);
	МассивЦветов.Добавить(WebЦвета.ГрифельноСиний);
	МассивЦветов.Добавить(WebЦвета.Древесный);
	МассивЦветов.Добавить(WebЦвета.ДымчатоБелый);
	МассивЦветов.Добавить(WebЦвета.ЖелтоЗеленый);
	МассивЦветов.Добавить(WebЦвета.Желтый);
	МассивЦветов.Добавить(WebЦвета.ЗамшаСветлый);
	МассивЦветов.Добавить(WebЦвета.ЗеленаяЛужайка);
	МассивЦветов.Добавить(WebЦвета.ЗеленоватоЖелтый);
	МассивЦветов.Добавить(WebЦвета.ЗеленоватоЛимонный);
	МассивЦветов.Добавить(WebЦвета.ЗеленоЖелтый);
	МассивЦветов.Добавить(WebЦвета.Зеленый);
	МассивЦветов.Добавить(WebЦвета.ЗеленыйЛес);
	МассивЦветов.Добавить(WebЦвета.Золотистый);
	МассивЦветов.Добавить(WebЦвета.Золотой);
	МассивЦветов.Добавить(WebЦвета.Индиго);
	МассивЦветов.Добавить(WebЦвета.Киноварь);
	МассивЦветов.Добавить(WebЦвета.Кирпичный);
	МассивЦветов.Добавить(WebЦвета.КожаноКоричневый);
	МассивЦветов.Добавить(WebЦвета.Коралловый);
	МассивЦветов.Добавить(WebЦвета.Коричневый);
	МассивЦветов.Добавить(WebЦвета.КоролевскиГолубой);
	МассивЦветов.Добавить(WebЦвета.КрасноФиолетовый);
	МассивЦветов.Добавить(WebЦвета.Красный);
	МассивЦветов.Добавить(WebЦвета.Кремовый);
	МассивЦветов.Добавить(WebЦвета.Лазурный);
	МассивЦветов.Добавить(WebЦвета.ЛимонноЗеленый);
	МассивЦветов.Добавить(WebЦвета.Лимонный);
	МассивЦветов.Добавить(WebЦвета.Лосось);
	МассивЦветов.Добавить(WebЦвета.ЛососьСветлый);
	МассивЦветов.Добавить(WebЦвета.ЛососьТемный);
	МассивЦветов.Добавить(WebЦвета.Льняной);
	МассивЦветов.Добавить(WebЦвета.Малиновый);
	МассивЦветов.Добавить(WebЦвета.МятныйКрем);
	МассивЦветов.Добавить(WebЦвета.НавахоБелый);
	МассивЦветов.Добавить(WebЦвета.НасыщенноНебесноГолубой);
	МассивЦветов.Добавить(WebЦвета.НасыщенноРозовый);
	МассивЦветов.Добавить(WebЦвета.НебесноГолубой);
	МассивЦветов.Добавить(WebЦвета.НейтральноАквамариновый);
	МассивЦветов.Добавить(WebЦвета.НейтральноБирюзовый);
	МассивЦветов.Добавить(WebЦвета.НейтральноВесеннеЗеленый);
	МассивЦветов.Добавить(WebЦвета.НейтральноГрифельноСиний);
	МассивЦветов.Добавить(WebЦвета.НейтральноЗеленый);
	МассивЦветов.Добавить(WebЦвета.НейтральноКоричневый);
	МассивЦветов.Добавить(WebЦвета.НейтральноПурпурный);
	МассивЦветов.Добавить(WebЦвета.НейтральноСерый);
	МассивЦветов.Добавить(WebЦвета.НейтральноСиний);
	МассивЦветов.Добавить(WebЦвета.НейтральноФиолетовоКрасный);
	МассивЦветов.Добавить(WebЦвета.Оливковый);
	МассивЦветов.Добавить(WebЦвета.ОранжевоКрасный);
	МассивЦветов.Добавить(WebЦвета.Оранжевый);
	МассивЦветов.Добавить(WebЦвета.Орхидея);
	МассивЦветов.Добавить(WebЦвета.ОрхидеяНейтральный);
	МассивЦветов.Добавить(WebЦвета.ОрхидеяТемный);
	МассивЦветов.Добавить(WebЦвета.Охра);
	МассивЦветов.Добавить(WebЦвета.Перламутровый);
	МассивЦветов.Добавить(WebЦвета.Персиковый);
	МассивЦветов.Добавить(WebЦвета.ПесочноКоричневый);
	МассивЦветов.Добавить(WebЦвета.ПолночноСиний);
	МассивЦветов.Добавить(WebЦвета.ПризрачноБелый);
	МассивЦветов.Добавить(WebЦвета.Пурпурный);
	МассивЦветов.Добавить(WebЦвета.Пшеничный);
	МассивЦветов.Добавить(WebЦвета.РозовоКоричневый);
	МассивЦветов.Добавить(WebЦвета.Розовый);
	МассивЦветов.Добавить(WebЦвета.Роса);
	МассивЦветов.Добавить(WebЦвета.РыжеватоКоричневый);
	МассивЦветов.Добавить(WebЦвета.СветлоГрифельноСерый);
	МассивЦветов.Добавить(WebЦвета.СветлоГрифельноСиний);
	МассивЦветов.Добавить(WebЦвета.СветлоЖелтый);
	МассивЦветов.Добавить(WebЦвета.СветлоЖелтыйЗолотистый);
	МассивЦветов.Добавить(WebЦвета.СветлоЗеленый);
	МассивЦветов.Добавить(WebЦвета.СветлоЗолотистый);
	МассивЦветов.Добавить(WebЦвета.СветлоКоралловый);
	МассивЦветов.Добавить(WebЦвета.СветлоКоричневый);
	МассивЦветов.Добавить(WebЦвета.СветлоНебесноГолубой);
	МассивЦветов.Добавить(WebЦвета.СветлоРозовый);
	МассивЦветов.Добавить(WebЦвета.СветлоСерый);
	МассивЦветов.Добавить(WebЦвета.СеребристоСерый);
	МассивЦветов.Добавить(WebЦвета.Серебряный);
	МассивЦветов.Добавить(WebЦвета.СероСиний);
	МассивЦветов.Добавить(WebЦвета.Серый);
	МассивЦветов.Добавить(WebЦвета.СинеСерый);
	МассивЦветов.Добавить(WebЦвета.СинеФиолетовый);
	МассивЦветов.Добавить(WebЦвета.Синий);
	МассивЦветов.Добавить(WebЦвета.СинийСоСтальнымОттенком);
	МассивЦветов.Добавить(WebЦвета.СинийСПороховымОттенком);
	МассивЦветов.Добавить(WebЦвета.Сливовый);
	МассивЦветов.Добавить(WebЦвета.СлоноваяКость);
	МассивЦветов.Добавить(WebЦвета.СтароеКружево);
	МассивЦветов.Добавить(WebЦвета.ТемноБирюзовый);
	МассивЦветов.Добавить(WebЦвета.ТемноБордовый);
	МассивЦветов.Добавить(WebЦвета.ТемноГрифельноСерый);
	МассивЦветов.Добавить(WebЦвета.ТемноГрифельноСиний);
	МассивЦветов.Добавить(WebЦвета.ТемноЗеленый);
	МассивЦветов.Добавить(WebЦвета.ТемноЗолотистый);
	МассивЦветов.Добавить(WebЦвета.ТемноКрасный);
	МассивЦветов.Добавить(WebЦвета.ТемноОливковоЗеленый);
	МассивЦветов.Добавить(WebЦвета.ТемноОранжевый);
	МассивЦветов.Добавить(WebЦвета.ТемноСерый);
	МассивЦветов.Добавить(WebЦвета.ТемноСиний);
	МассивЦветов.Добавить(WebЦвета.ТемноФиолетовый);
	МассивЦветов.Добавить(WebЦвета.ТеплоРозовый);
	МассивЦветов.Добавить(WebЦвета.Томатный);
	МассивЦветов.Добавить(WebЦвета.ТопленоеМолоко);
	МассивЦветов.Добавить(WebЦвета.ТусклоОливковый);
	МассивЦветов.Добавить(WebЦвета.ТусклоРозовый);
	МассивЦветов.Добавить(WebЦвета.ТусклоСерый);
	МассивЦветов.Добавить(WebЦвета.Ультрамарин);
	МассивЦветов.Добавить(WebЦвета.Фиолетовый);
	МассивЦветов.Добавить(WebЦвета.Фуксин);
	МассивЦветов.Добавить(WebЦвета.ФуксинТемный);
	МассивЦветов.Добавить(WebЦвета.Фуксия);
	МассивЦветов.Добавить(WebЦвета.Хаки);
	МассивЦветов.Добавить(WebЦвета.ХакиТемный);
	МассивЦветов.Добавить(WebЦвета.ЦветМорскойВолны);
	МассивЦветов.Добавить(WebЦвета.ЦветМорскойВолныНейтральный);
	МассивЦветов.Добавить(WebЦвета.ЦветМорскойВолныСветлый);
	МассивЦветов.Добавить(WebЦвета.ЦветМорскойВолныТемный);
	МассивЦветов.Добавить(WebЦвета.ЦветокБелый);
	МассивЦветов.Добавить(WebЦвета.Циан);
	МассивЦветов.Добавить(WebЦвета.ЦианНейтральный);
	МассивЦветов.Добавить(WebЦвета.ЦианСветлый);
	МассивЦветов.Добавить(WebЦвета.ЦианТемный);
	//МассивЦветов.Добавить(WebЦвета.Черный);
	МассивЦветов.Добавить(WebЦвета.ШелковыйОттенок);
	МассивЦветов.Добавить(WebЦвета.Шоколадный);	
	МассивЦветов.Добавить(WebЦвета.Белый);	
	
	Возврат МассивЦветов;
КонецФункции

&НаКлиенте
Процедура ПостроитьДиаграммуГанттаУниверсально(Диаграмма, ДеревоДанных, 
			ТаблицаСвязей = Неопределено, 
			КоличествоУровней = 0, 
			НастройкиШкалыВремени = Неопределено, 
			ВыводитьМетку = Ложь)
// На основании дерева значений строит диаграмму Гантта (вариант 0) 
// Ограничения этого варианта: без ограничений, долой ограничения!
//
// Параметры:
//  Диаграмма  – Тип: ДиаграммаГантта, собственно диаграмма
//  ДеревоДанных  – Тип: ДеревоЗначений, структура данных для диаграммы
//  ТаблицаСвязей  – Тип: ТаблицаЗначений, структура взаимосвязей между объектами
//  КоличествоУровней  - Тип: Число, количество уровней точек диаграммы (возвращаемый)
//	НастройкиШкалыВремени - Тип:Структура, содержит настройки шкалы времени
//		.ЕдиницаПериодическогоВарианта 	- Тип: ТипЕдиницыШкалыВремени
//		.ПоддержкаМасштаба 				- Тип: ПоддержкаМасштабаДиаграммыГанта
//		.Единица 						- Тип: ТипЕдиницыШкалыВремени
//		.Кратность 						- Тип: Число
//		.ФорматДня 						- Тип: ФорматДняШкалыВремени
//  ВыводитьМетку  - Тип: Булево, флаг указывает на необходимость вывести метку
//						  на текущую дату
//

    ИндексЦвета = Неопределено;
	массивцветов = ЗаполнитьМассивЦветов();

	Диаграмма.Обновление = Ложь;
	Диаграмма.Очистить();
	
	// чтобы потом (если это нужно) строить связи, будем кэшировать
	// соответствие точек Гантта с объектами дерева
	
	КэшДерева = Новый Соответствие;
		
	Для каждого СтрокаДерева Из ДеревоДанных.ПолучитьЭлементы() Цикл
		Точка = ДобавитьИнтервалДиаграммыГантта(Диаграмма, СтрокаДерева, КэшДерева, КоличествоУровней, массивцветов);
		Диаграмма.РазвернутьТочку(Точка, Истина);
	КонецЦикла; 
	
	// при необходимости строим связи между интервалами
	
	Для каждого КиЗ Из Предшественники Цикл
		Для каждого пред Из КиЗ.Значение Цикл
			ИнтервалОткуда = КэшДерева[пред.Ключ];
			ИнтервалКуда = КэшДерева[КиЗ.Ключ];
			
			Если ИнтервалОткуда = Неопределено ИЛИ ИнтервалКуда = Неопределено Тогда      
				Продолжить; // искомых интервалов в дереве почему-то не оказалось
			КонецЕсли; 
			
			Связь = ИнтервалОткуда.Добавить(ИнтервалКуда);
			
			//Связь.ТипСвязи = ПолучитьТипСвязиПоСтроке(пред.Значение.ТипСвязи);
			
			//Связь.Цвет = ЦветаССервера.упоЦветДиаграммыГанттаСвязиПоУмолчанию;
		КонецЦикла;
	КонецЦикла;
	
	ШкалаВремени = Диаграмма.ОбластьПостроения.ШкалаВремени;
	
	// по умолчанию настроим диаграмму на месяцы
	
	Если НастройкиШкалыВремени = Неопределено Тогда
		лЕдиницаПериодическогоВарианта 	= ТипЕдиницыШкалыВремени.Месяц;
		лПоддержкаМасштаба 				= ПоддержкаМасштабаДиаграммыГанта.ВсеДанные;
		лЕдиница 						= ТипЕдиницыШкалыВремени.Месяц;
		лКратность 						= 1;
		лФорматДня 						= ФорматДняШкалыВремени.ДеньМесяцаДеньНедели;
	Иначе
		лЕдиницаПериодическогоВарианта 	= НастройкиШкалыВремени.ЕдиницаПериодическогоВарианта;
		лПоддержкаМасштаба 				= НастройкиШкалыВремени.ПоддержкаМасштаба;
		лЕдиница 						= НастройкиШкалыВремени.Единица;
		лКратность 						= НастройкиШкалыВремени.Кратность;
		лФорматДня 						= НастройкиШкалыВремени.ФорматДня;
	КонецЕсли;
	
	
	Для каждого ЭлементШкалы Из ШкалаВремени.Элементы Цикл
		
		ЭлементШкалы.Единица = лЕдиница;
		ЭлементШкалы.Кратность = лКратность;
		ЭлементШкалы.ФорматДня = лФорматДня;
		
		//Если ВыводитьМетку Тогда 
		//	ЭлементШкалы.Метки.Очистить();
		//	Метка = ЭлементШкалы.Метки.Добавить(ТекущаяДата());
		//	Метка.ЦветЛинии = ЦветаСтиля.упоЦветМеткиДиаграммыГантта;
		//КонецЕсли; 
		
	КонецЦикла; 
	
	Диаграмма.ЕдиницаПериодическогоВарианта = лЕдиницаПериодическогоВарианта;
	Диаграмма.ПоддержкаМасштаба 			= лПоддержкаМасштаба;
	
	//УстановитьПериодГантта(Диаграмма, ТипЕдиницыШкалыВремени.День);
	
	Диаграмма.Обновление = Истина;

КонецПроцедуры // ПостроитьДиаграммуГанттаУниверсально() 

&НаКлиенте
Процедура Сформировать(Команда)
	ПостроитьДиаграммуГанттаУниверсально(ДиграммаГанта, ДеревоЗадач);
	
	ДиграммаГанта.ОтображениеТекстаЗначения = ОтображениеТекстаЗначенияДиаграммыГанта.Право;
	ДиграммаГанта.ОтображатьЛегенду = Ложь;
КонецПроцедуры

&НаСервере
Функция СформироватьСервер()
	лДеревоЗадач = РеквизитФормыВЗначение("ДеревоЗадач");
	
	лДеревоЗадач.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗадачиКВыполнению.Дело.ГруппаДел КАК Проект,
	|	ЗадачиКВыполнению.Исполнитель КАК Задача,
	|	МИНИМУМ(ДатыЗадачСрезПоследних.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(ДатыЗадачСрезПоследних.ПлановаяДата) КАК ДатаЗавершения
	|ИЗ
	|	РегистрСведений.ЗадачиКВыполнению КАК ЗадачиКВыполнению
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.ДатыЗадач.СрезПоследних КАК ДатыЗадачСрезПоследних
	|ПО 
	|	ЗадачиКВыполнению.Дело = ДатыЗадачСрезПоследних.Дело
	|
	|ГДЕ
	|	НЕ ЗадачиКВыполнению.Исполнитель = Значение(Справочник.Сотрудники.ПустаяСсылка)
	|	И НЕ ДатыЗадачСрезПоследних.ПлановаяДата = ДАТАВРЕМЯ(1,1,1,0,0,0)
	|	И ДатыЗадачСрезПоследних.ПлановаяДата МЕЖДУ &ДатаНачала И &ДатаКонца
	|	И НЕ ЗадачиКВыполнению.Статус = Значение(Перечисление.Статус.Уточняется)
	|	И НЕ ЗадачиКВыполнению.Статус = Значение(Перечисление.Статус.Решен)
	|	И НЕ ЗадачиКВыполнению.Статус = Значение(Перечисление.Статус.Закрыт)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачиКВыполнению.Дело.ГруппаДел,
	|	ЗадачиКВыполнению.Исполнитель
	|УПОРЯДОЧИТЬ ПО
	|	ЗадачиКВыполнению.Исполнитель.Наименование,
	|	МИНИМУМ(ДобавитьКДате(ДатыЗадачСрезПоследних.ПлановаяДата, ЧАС, -ДатыЗадачСрезПоследних.ПланТрудозатрат))
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(лДеревоЗадач.Строки.Добавить(), Выборка);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(лДеревоЗадач, "ДеревоЗадач");
КонецФункции // СформироватьСервер()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Предшественники = Новый Соответствие;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаНачала = ТекущаяДата();
	ДатаКонца = ДобавитьМесяц(ДатаНачала, 1);
	
	МасштабДиаграммыГанта = 15;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	СформироватьСервер();
КонецПроцедуры

