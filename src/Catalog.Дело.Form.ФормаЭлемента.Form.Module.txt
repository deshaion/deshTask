
&НаКлиенте
Перем фЗаблокироватьВызовСервера;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, , "ДопРеквизиты");
	// Конец СтандартныеПодсистемы.Свойства

	элементОтбора = ОтданныеГолоса.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	элементОтбора.использование = Истина;
	элементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дело");
	элементОтбора.ПравоеЗначение = Объект.Ссылка;
	
	элементОтбора = ИсторияОценок.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	элементОтбора.использование = Истина;
	элементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дело");
	элементОтбора.ПравоеЗначение = Объект.Ссылка;
	
	ПолучитьЧисловыеПоказатели();
	
	ЧекЛистыСервер.ДобавитьЧекЛист(ЭтаФорма, Объект.Ссылка, "Группа5");
	Элементы.ПанельДобавленияКомментария.Видимость = Ложь;
	
	ПолучитьИнфоОПринадлежностиКПлануРазвития();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ФорматированныйТекст = ТекущийОбъект.РасширенноеОписание.Получить();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ТекущийОбъект.РасширенноеОписание = Новый ХранилищеЗначения(ФорматированныйТекст, Новый СжатиеДанных(9));
	
	ТекстHTML = "";
	Вложения = Новый Структура;
	ФорматированныйТекст.ПолучитьHTML(ТекстHTML, Вложения);
	
	ТекущийОбъект.ТекстРасширенноеОписание = СтроковыеФункцииКлиентСервер.ИзвлечьТекстИзHTML(ТекстHTML);
КонецПроцедуры

&НаСервере
Функция ПолучитьЧисловыеПоказатели()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланДел.Статус КАК Статус,
	|	СУММА(РАЗНОСТЬДАТ(Потрачено.Старт, Потрачено.Завершение, МИНУТА) / 60) КАК Потрачено,
	|	ЕстьNULL(ДатыЗадач.ПланТрудозатрат, 0) КАК Оценка,
	|	ДатыЗадач.ПлановаяДата КАК Срок
	|ИЗ
	|	РегистрСведений.ЗадачиКВыполнению КАК ПланДел
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ДатыЗадач.СрезПоследних КАК ДатыЗадач
	|ПО
	|	ПланДел.Дело = ДатыЗадач.Дело
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.Дела КАК Потрачено
	|ПО
	|	ПланДел.Дело = Потрачено.Дело
	|
	|ГДЕ
	|	ПланДел.Дело = &Дело
	|СГРУППИРОВАТЬ ПО
	|	ПланДел.Статус,
	|	ДатыЗадач.ПланТрудозатрат,
	|	ДатыЗадач.ПлановаяДата
	|";
	
	Запрос.УстановитьПараметр("Дело", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Оценка = Выборка.Оценка;
		Потрачено = Выборка.Потрачено;
		Осталось = Оценка - Потрачено;
	КонецЕсли;
КонецФункции // ПолучитьЧисловыеПоказатели()

&НаСервере
Функция ПолучитьИнфоОПринадлежностиКПлануРазвития()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗадачиКПожеланию.Статус КАК СтатусПожелания
	|ИЗ
	|	РегистрСведений.ЗадачиКПожеланию КАК ЗадачиКПожеланию
	|ГДЕ
	|	ЗадачиКПожеланию.Дело = &СсылкаНаЗадачу
	|";
	
	Запрос.УстановитьПараметр("СсылкаНаЗадачу", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// пока планируется только вывести информацию о плане развития
	естьПожеланияРазвите = Ложь;
	Если Выборка.Следующий() Тогда
		естьПожеланияРазвите = Истина;
		Элементы.ИнфоОПланеРазвития.Заголовок = "Статус пожелания";
		ИнфоОПланеРазвития = Выборка.СтатусПожелания;
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПланРазвития.Ссылка КАК СсылкаНаПланРазвития,
	|	ПланРазвития.Родитель КАК Родитель
	|ИЗ
	|	Справочник.ПланРазвития КАК ПланРазвития
	|ГДЕ
	|	ПланРазвития.СсылкаНаЗадачу = &СсылкаНаЗадачу
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		естьПожеланияРазвите = Истина;
		Если ЗначениеЗаполнено(Выборка.СсылкаНаПланРазвития) Тогда
			ИнфоОПланеРазвития = ИнфоОПланеРазвития + " | Есть в плане развития.";
		КонецЕсли;
	КонецЕсли;
	//Пока Выборка.Следующий() Цикл
	//	// задача может быть в нескольких планах развития и только один раз пожеланием
	//	
	//КонецЦикла;
	
	Элементы.ИнфоОПланеРазвития.Видимость = естьПожеланияРазвите;
КонецФункции // ПолучитьИнфоОПринадлежностиКПлануРазвития()

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФУНКЦИИ ЧЕК-ЛИСТА

&НаСервере
Функция ЧекЛистНажатиеСервер()
	Элементы.Удалить(Элементы["НадписьЧекЛист"]);
	
	ЧекЛистыСервер.ДобавитьЭлементыЧекЛиста(ЭтаФорма, Объект.Ссылка)
КонецФункции // ЧекЛистНажатиеСервер()

&НаКлиенте
Процедура ЧекЛистНажатие(Элемент)
	ЧекЛистНажатиеСервер();
КонецПроцедуры // ЧекЛистНажатие()

&НаКлиенте
Процедура НовыйПунктПриИзменении(Элемент)
	ЧекЛистыСервер.ЗаписатьНовыйПункт(ЭтаФорма.ПунктЧекЛиста, Объект.Ссылка);
	
	Элементы.ЭлементыЧекЛиста.Обновить();
	
	фЗаблокироватьВызовСервера = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЧекЛистВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ЧекЛистыСервер.УстановитьСнятьВыполнено(ВыбраннаяСтрока);
	
	Элемент.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура НовыйПунктАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	фЗаблокироватьВызовСервера = Истина;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФУНКЦИИ КОММЕНТИРОВАНИЯ

&НаКлиенте
Процедура ПоказатьКомментарии(Команда)
	ЕстьКомментарии = НЕ ЕстьКомментарии;
	Элементы.ИсторияСобытий.Видимость = ЕстьКомментарии;
	
	клОбновитьОписание();
КонецПроцедуры

&НаКлиенте
Процедура клОбновитьОписание()
	Если НЕ ЕстьКомментарии ИЛИ фЗаблокироватьВызовСервера Тогда
		Возврат;
	КонецЕсли;
	
	ПолеИстории = КомментарииСервер.ПолучитьОписание(Объект.Ссылка);
КонецПроцедуры // клОбновитьОписание()

&НаКлиенте
Процедура СменитьСтатусПоручения(текДело = Неопределено)
	если объект.Ссылка.Пустая() тогда
		Возврат;
	конецесли;
	
	КомментарийДела = СтрЗаменить(ПолеКомментария, Символы.ПС, "<br>");
	ПолеКомментария = "";
	
	КомментарииКлиент.УстановитьСтатусПоручения(Объект.Ссылка, КомментарийДела);
	
	клОбновитьОписание();
КонецПроцедуры // СменитьСтатусПоручения()

&НаКлиенте
Процедура ДобавитьКомментарий(Команда)
	СменитьСтатусПоручения();
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	фЗаблокироватьВызовСервера = Ложь;
	
	//Элементы.ИсторияСобытий.Видимость = ЕстьКомментарии;
	ПоказатьКомментарии(Неопределено);
	
	ПодключитьОбработчикОжидания("клОбновитьОписание", 15);
КонецПроцедуры

&НаКлиенте
Процедура СсылкаИсторияОценокНажатие1(Элемент)
	текПозиция = Элементы.ПанельОценок.Видимость;
	
	Элементы.ПанельОценок.Видимость = НЕ текПозиция;
	Если текПозиция Тогда // панель видима, и мы переходим в режим не видимости
		Элементы.СсылкаИсторияОценок.Заголовок = "История оценок";
	Иначе
		Элементы.СсылкаИсторияОценок.Заголовок = "Скрыть историю оценок";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СсылкаАудиторовНажатие(Элемент)
	текПозиция = Элементы.ПанельАудиторов.Видимость;
	
	Элементы.ПанельАудиторов.Видимость = НЕ текПозиция;
	Если текПозиция Тогда // панель видима, и мы переходим в режим не видимости
		Элементы.СсылкаАудиторов.Заголовок = "Список аудиторов";
	Иначе
		Элементы.СсылкаАудиторов.Заголовок = "Скрыть список аудиторов";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СсылкаДобавитьКомментарийНажатие(Элемент)
	текПозиция = Элементы.ПанельДобавленияКомментария.Видимость;
	
	Элементы.ПанельДобавленияКомментария.Видимость = НЕ текПозиция;
	Если текПозиция Тогда // панель видима, и мы переходим в режим не видимости
		Элементы.СсылкаДобавитьКомментарий.Заголовок = "Оставить комментарий";
	Иначе
		Элементы.СсылкаДобавитьКомментарий.Заголовок = "Скрыть поле добавления комментария";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	фЗаблокироватьВызовСервера = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	фЗаблокироватьВызовСервера = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	фЗаблокироватьВызовСервера = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	фЗаблокироватьВызовСервера = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПолеКомментарияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	фЗаблокироватьВызовСервера = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПолеКомментарияПриИзменении(Элемент)
	фЗаблокироватьВызовСервера = Ложь;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФОРМАТИРОВАННЫЙ ТЕКСТ

&НаКлиенте
Процедура Редактировать(Команда)
	Если Элементы.Редактировать.Пометка Тогда      
		// переключаем на чтение
		Элементы.ФорматированныйТекст.ТолькоПросмотр = Истина;
		Элементы.КнопкиФорматирования.Видимость = Ложь;
	Иначе
		// переключаем на редактирование
		ФорматированныйТекст.ПолучитьHTML(СохраненныйТекст, СохраненныеВложения);
		
		Элементы.ФорматированныйТекст.ТолькоПросмотр = Ложь;
		Элементы.КнопкиФорматирования.Видимость = Истина;
	КонецЕсли; 

	// и фиксируем переключение в пометке 
	
	Элементы.Редактировать.Пометка = НЕ Элементы.Редактировать.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	ВосстановитьСервер();
КонецПроцедуры

Функция ВосстановитьСервер()
	ФорматированныйТекст.УстановитьHTML(СохраненныйТекст, СохраненныеВложения);
КонецФункции // ВосстановитьСервер()

&НаКлиенте
Процедура ПодробноеОписание(Команда)
	Если Элементы.ПодробноеОписание.Пометка Тогда
		Элементы.ПанельОсновная.ТекущаяСтраница = Элементы.СтраницаОсновная;
	Иначе
		Элементы.ПанельОсновная.ТекущаяСтраница = Элементы.СтраницаОписание;
	КонецЕсли;
	
	Элементы.ПодробноеОписание.Пометка = НЕ Элементы.ПодробноеОписание.Пометка;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::


