&НаКлиенте
Перем мВведенныйТекст;

&НаКлиенте
Перем ПодобранныеЗначения;

&НаКлиенте
Перем мМесяцы;

&НаКлиенте
Перем мДатыМесяцев;

&НаКлиенте
Перем мДатыНедель;

&НаКлиенте
Перем текКнопка;

&НаКлиенте
Перем текНеделя;

&НаКлиенте
Перем НомерСтроки;

&НаКлиенте
Перем СохранениеЗаблокировано;

&НаКлиенте
Перем _День;

&НаСервере
Функция ПолучитьВыборкуДел(пДатаНедели)
	лДатаНедели = НачалоНедели(пДатаНедели);
	датаКонцаНедели = КонецНедели(лДатаНедели);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПланДел.Дело,
	|	ПланДел.Дата КАК Дата,
	|	ПланДел.Старт,
	|	ПланДел.Завершение
	|ИЗ
	|	РегистрСведений.ПланДел КАК ПланДел
	|ГДЕ
	|	ПланДел.Сотрудник = &текСотрудник
	|	И ПланДел.Дата МЕЖДУ &Начало И &Конец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Старт";
	
	Запрос.УстановитьПараметр("текСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Начало", лДатаНедели);
	Запрос.УстановитьПараметр("Конец", датаКонцаНедели);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	
	Возврат Выборка;
КонецФункции // ЗаполнитьДелаНаДни()

&НаСервере
Функция СохранитьПланДел()
	_День = 24 * 60 * 60;
	текДата = ДатаНедели;
	
	Пока текДата <= КонецНедели(ДатаНедели) Цикл
		найдСтроки = ДелаДни.НайтиСтроки(Новый Структура("Дата", текДата));
		
		Если найдСтроки.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;
		
		наборЗаписей = РегистрыСведений.ПланДел.СоздатьНаборЗаписей();
		наборЗаписей.Отбор.Дата.Установить(текДата);
		наборЗаписей.Отбор.Сотрудник.Установить(Сотрудник);
		наборЗаписей.Прочитать();
		
		наборЗаписей.Очистить();
		
		Для каждого текЗапись Из найдСтроки Цикл
			Если текЗапись.Системный Тогда
				Продолжить;
			КонецЕсли;
			новЗапись = наборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(новЗапись, текЗапись);
			
			новЗапись.Сотрудник = Сотрудник;
		КонецЦикла;
	
		наборЗаписей.Записать();
		
		текДата = текДата + _День;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

Функция ИмяДняНедели(номерДняНедели)
	Если номерДняНедели = 1 Тогда
		Возврат "ПН";
	ИначеЕсли номерДняНедели = 2 Тогда
		Возврат "ВТ";
	ИначеЕсли номерДняНедели = 3 Тогда
		Возврат "СР";
	ИначеЕсли номерДняНедели = 4 Тогда
		Возврат "ЧТ";
	ИначеЕсли номерДняНедели = 5 Тогда
		Возврат "ПТ";
	ИначеЕсли номерДняНедели = 6 Тогда
		Возврат "СБ";
	ИначеЕсли номерДняНедели = 7 Тогда
		Возврат "ВС";
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции // ИмяДняНедели()

&НаСервере
Процедура ЗаполнитьДелаНаДни(пДатаНедели)
	ДелаДни.Очистить();
	
	Выборка = ПолучитьВыборкуДел(пДатаНедели);
	
	// Добавим 7 дней недели
	_День = 60 * 60 * 24;
	Для сч = 0 По 6 Цикл
		текДень = пДатаНедели + сч * _День;
		новаяСтрока = ДелаДни.Добавить();
		новаяСтрока.Дело = Формат(текДень, "ДЛФ=DD") + "[" + ИмяДняНедели(ДеньНедели(текДень)) + "]";
		новаяСтрока.Дата = текДень;
		новаяСтрока.Системный = Истина;
		
		найдСтроки = Выборка.НайтиСтроки(Новый Структура("Дата", текДень));
		Для каждого найдСтрока Из найдСтроки Цикл
			новаяСтрока = ДелаДни.Добавить();
			ЗаполнитьЗначенияСвойств(новаяСтрока, найдСтрока);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДелаНаДни()

&НаКлиенте
Процедура ЗаполнитьНедели(пДатаМесяца)
	датаМесяца = НачалоМесяца(пДатаМесяца);
	номерМесяца = Месяц(датаМесяца);
	текМесяц = номерМесяца;
	Пока номерМесяца < текМесяц Цикл
		лНачало = НачалоНедели(датаМесяца);
		лКонец = КонецНедели(датаМесяца);
		
		имяКоманды = Формат(лНачало, "ДФ=_ddMMyyyy");
		лкоманда = Команды.Добавить(имяКоманды);
		лкоманда.Действие = "ВыбратьНеделю";
		лкнопка = Элементы.Добавить("Неделя" + имяКоманды, Тип("КнопкаФормы"), Элементы.Недели);
		лкнопка.ИмяКоманды = лкоманда.Имя;
		
		мДатыНедель.Вставить(имяКоманды, лНачало);
		
		датаМесяца = лКонец + 24 * 3600;
		
		текМесяц = Месяц(датаМесяца);
	КонецЦикла;
КонецПроцедуры // ЗаполнитьДелаНаДни()

&НаКлиенте
Процедура ВыбратьМесяц(Команда)
	ЗаполнитьНедели(мДатыМесяцев[команда.имя]);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьНеделю(Команда)
	ЗаполнитьДелаНаДни(мДатыНедель[команда.имя]);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКнопкуМесяца(пМесяц, пМесяцы)
	имяКоманды = пМесяцы[Месяц(пМесяц)];
	лкоманда = Команды.Добавить(имяКоманды);
	лкоманда.Действие = "ВыбратьМесяц";
	лкнопка = Элементы.Добавить("месяц" + Месяц(пМесяц), Тип("КнопкаФормы"), Элементы.Месяцы);
	лкнопка.ИмяКоманды = лкоманда.Имя;
	
	мДатыМесяцев.Вставить(имяКоманды, пМесяц);
КонецПроцедуры // ДобавитьМесяц()

&НаКлиенте
функция ИзменитьНаНеделю(некаяДата)
	возврат НачалоНедели(некаяДата);
КонецФункции

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// Обработка событий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Сотрудник = ПараметрыСеанса.ТекущийСотрудник;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	_День = 60 * 60 * 24;
	
	//мДатыМесяцев = Новый Соответствие;
	//мДатыНедель = Новый Соответствие;
	//
	//месяц0 = ТекущаяДата();
	//месяц1 = ДобавитьМесяц(ТекущаяДата(), 1);
	//месяц2 = ДобавитьМесяц(ТекущаяДата(), 2);
	//
	//мМесяцы = Новый Соответствие;
	//мМесяцы.Вставить(1, "январь");
	//мМесяцы.Вставить(2, "февраль");
	//мМесяцы.Вставить(3, "март");
	//мМесяцы.Вставить(4, "апрель");
	//мМесяцы.Вставить(5, "май");
	//мМесяцы.Вставить(6, "июнь");
	//мМесяцы.Вставить(7, "июль");
	//мМесяцы.Вставить(8, "август");
	//мМесяцы.Вставить(9, "сентябрь");
	//мМесяцы.Вставить(10, "октябрь");
	//мМесяцы.Вставить(11, "ноябрь");
	//мМесяцы.Вставить(12, "декабрь");
	//
	//ДобавитьКнопкуМесяца(месяц0, мМесяцы);
	//ДобавитьКнопкуМесяца(месяц1, мМесяцы);
	//ДобавитьКнопкуМесяца(месяц2, мМесяцы);
	//
	//ЗаполнитьНедели(месяц0);
	//ЗаполнитьДелаНаДни(месяц0);
	
	ДатаНедели = ИзменитьНаНеделю(ТекущаяДата());
	
	СохранениеЗаблокировано = Истина;
	ЗаполнитьДелаНаДни(ДатаНедели);
	СохранениеЗаблокировано = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьПланДел();
КонецПроцедуры

&НаКлиенте
Процедура _ЗаполнитьДелаНедели()
	СохранениеЗаблокировано = Истина;
	ЗаполнитьДелаНаДни(ДатаНедели);
	СохранениеЗаблокировано = Ложь;
КонецПроцедуры // _ЗаполнитьДелаНедели()

&НаКлиенте
Процедура ДатаНеделиПриИзменении(Элемент)
	СохранитьПланДел();
	
	ДатаНедели = ИзменитьНаНеделю(ДатаНедели);
	_ЗаполнитьДелаНедели();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	СохранитьПланДел();
	
	_ЗаполнитьДелаНедели();
КонецПроцедуры

&НаСервере
Функция ДобавитьСтроку(текСтрокаДата)
	_День = 60 * 60 * 24;
	текДата = ДатаНедели;
	
	колвоПредСтрок = 0;
	Пока текДата <= текСтрокаДата Цикл
		найдСтроки = ДелаДни.НайтиСтроки(Новый Структура("Дата", текДата));
		колвоПредСтрок = колвоПредСтрок + найдСтроки.Количество();
		текДата = текДата + _День;
	КонецЦикла;
	
	новаяСтрока = ДелаДни.Вставить(колвоПредСтрок);
	новаяСтрока.Дата = текСтрокаДата;
	новаяСтрока.Дело = Справочники.Дело.ПустаяСсылка();
	
	Если ДелаДни[колвоПредСтрок - 1].Системный Тогда
		новаяСтрока.Старт = текСтрокаДата + 60*60*9;
	Иначе
		новаяСтрока.Старт = ДелаДни[колвоПредСтрок - 1].Завершение;
	КонецЕсли;
	Если новаяСтрока.Старт > КонецДня(текСтрокаДата) Тогда
		новаяСтрока.Старт = КонецДня(текСтрокаДата) - 61*60;
	КонецЕсли;
	новаяСтрока.Завершение = новаяСтрока.Старт + 60*60;
	
	Возврат новаяСтрока.ПолучитьИдентификатор();
КонецФункции // ДобавитьСтроку()

&НаКлиенте
Процедура ДелаДниПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	текСтрока = Элементы.ДелаДни.ТекущиеДанные;
	Если текСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	идСтроки = ДобавитьСтроку(текСтрока.Дата);
	Элементы.ДелаДни.ТекущаяСтрока = идСтроки;
	Элементы.ДелаДни.ИзменитьСтроку();
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФУНКЦИИ АВТО ПОДБОРА

&НаКлиенте
Процедура ДелаПНДелоПриИзменении(Элемент)
	Элементы.ДелаДни.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДелаПНДелоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	МодульДел.ОбработкаВыбора(ВыбранноеЗначение, СтандартнаяОбработка, мВведенныйТекст);
КонецПроцедуры

&НаКлиенте
Процедура ДелаПНДелоАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	МодульДел.Подбор(Текст, ДанныеВыбора, СтандартнаяОбработка, мВведенныйТекст, ПодобранныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ДелаПНДелоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	подобранноеЗначение = ПодобранныеЗначения[Текст];
	Если НЕ подобранноеЗначение = Неопределено Тогда
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(подобранноеЗначение);
	Иначе
		МодульДел.Подбор(Текст, ДанныеВыбора, СтандартнаяОбработка, мВведенныйТекст, ПодобранныеЗначения);
	КонецЕсли;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::

&НаКлиенте
Процедура ОбновитьПланДел()
	Если СохранениеЗаблокировано = Неопределено Тогда
		СохранениеЗаблокировано = Ложь;
	КонецЕсли;
	
	Если НЕ СохранениеЗаблокировано Тогда
		СохранитьПланДел();
	КонецЕсли;
КонецПроцедуры // ОбновитьПланДел()

&НаКлиенте
Процедура ДелаДниПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ОбновитьПланДел();
КонецПроцедуры

&НаКлиенте
Процедура ДелаДниПередУдалением(Элемент, Отказ)
	текСтрока = Элементы.ДелаДни.ТекущиеДанные;
	Если текСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если текСтрока.Системный Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ОбновитьПланДел();
	КонецЕсли;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФУНКЦИИ ПЕРЕТАСКИВАНИЯ

