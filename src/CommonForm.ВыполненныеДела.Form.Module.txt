&НаКлиенте
Перем мВведенныйТекст;

&НаКлиенте
Перем ПодобранныеЗначения;

&НаКлиенте
Перем мНеВыполнятьКомандуПереходаВКонецТаблицы;

&НаСервере
Процедура ЗаполнитьТаблицуПоДате()
	наборЗаписей = РегистрыСведений.Дела.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.День.Установить(НадписьДата);
	наборЗаписей.Отбор.Сотрудник.Установить(текСотрудник);
	наборЗаписей.Прочитать();
	
	ТаблицаВремени.Очистить();
	
	Для каждого текЗапись Из наборЗаписей Цикл
		новСтрока = ТаблицаВремени.Добавить();
		ЗаполнитьЗначенияСвойств(новСтрока, текЗапись);
		
		новСтрока.Проект = МодульДел.Проект(новСтрока.Дело);
	КонецЦикла;
	
	ТаблицаВремени.Сортировать("Старт");
КонецПроцедуры // ЗаполнитьТаблицуПоДате()

&НаСервере
Процедура СохранитьТаблицуНаДату()
	наборЗаписей = РегистрыСведений.Дела.СоздатьНаборЗаписей();
	наборЗаписей.Отбор.День.Установить(НадписьДата);
	наборЗаписей.Отбор.Сотрудник.Установить(текСотрудник);
	наборЗаписей.Прочитать();
	
	наборЗаписей.Очистить();
	
	Для каждого текЗапись Из ТаблицаВремени Цикл
		новЗапись = наборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(новЗапись, текЗапись);
		
		новЗапись.День = НадписьДата;
		новЗапись.Сотрудник = текСотрудник;
	КонецЦикла;
	
	наборЗаписей.Записать();
КонецПроцедуры // СохранитьТаблицуНаДату()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//itl.ermakov [06.08.2012] {{
	текСотрудник = ПараметрыСеанса.ТекущийСотрудник; 
	//}}itl.ermakov [06.08.2012]
	
	НадписьДата = ТекущаяДата();
	//itl.ermakov [24.05.2012] {{
	ДатаВыполнения = НадписьДата;
	//}}itl.ermakov [24.05.2012]
	
	ЗаполнитьФорму();
КонецПроцедуры

&НаСервере
Функция ЗаполнитьФорму() 
	ЗаполнитьТаблицуПоДате();
	ЗаполнитьИзбранныеКнопки();
	//itl.ermakov [24.05.2012] {{
	ЗаполнитьДополнительныеПараметры();
	//}}itl.ermakov [24.05.2012]	
КонецФункции

&НаСервере
Процедура ЗаполнитьИзбранныеКнопки()
	Справочники.ИзбранныеДела.ЗаполнитьКнопки(Элементы, Команды, Элементы.ИзбранныеКнопки, текСотрудник);
КонецПроцедуры // ЗаполнитьИзбранныеКнопки()

&НаСервере
Процедура установитьНачальноеЗначениеДело()
	Если НачалоДня(НадписьДата) = НачалоДня(ТекущаяДата()) Тогда
		лТекущаяДата = ТекущаяДата();
	Иначе
		лТекущаяДата = НадписьДата;
	КонецЕсли;
	
	таблица = РеквизитФормыВЗначение("ТаблицаВремени");
	Если таблица.Количество() > 1 Тогда
		предСтрока = таблица[таблица.Количество() - 2];
		предСтрока.Завершение = лТекущаяДата;
	КонецЕсли;
	
	текСтрока = таблица[таблица.Количество() - 1];
	//текСтрока.Дело = Справочники.Дело.ПустаяСсылка();
	текСтрока.Старт = лТекущаяДата;
	текСтрока.Завершение = лТекущаяДата;
	
	// установим статус для задачи "В работе"
	Статусы.ИзменитьСтатус(текСтрока.Дело, "ВРаботе");
	
	ЗначениеВРеквизитФормы(таблица, "ТаблицаВремени");
КонецПроцедуры // установитьНачальноеЗначениеДело()

&НаКлиенте
Процедура ТаблицаВремениПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	Если НоваяСтрока Тогда
		установитьНачальноеЗначениеДело();
	КонецЕсли;
	
	СохранитьТаблицуНаДату();
	
	Если НЕ мНеВыполнятьКомандуПереходаВКонецТаблицы Тогда
		Попытка
			Скрипт = Новый COMОбъект("WScript.Shell");
	   		Скрипт.SendKeys("{end}");
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВремениПослеУдаления(Элемент)
	СохранитьТаблицуНаДату();
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// ФУНКЦИИ АВТО ПОДБОРА

&НаКлиенте
Процедура ТаблицаВремениДелоПриИзменении(Элемент)
	// заполним проект
	текСтрока = ТаблицаВремени.НайтиПоИдентификатору(Элементы.ТаблицаВремени.ТекущаяСтрока);
	текСтрока.Проект = МодульДел.Проект(текСтрока.Дело);
	
	Элементы.ТаблицаВремени.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВремениДелоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	МодульДел.ОбработкаВыбора(ВыбранноеЗначение, СтандартнаяОбработка, мВведенныйТекст);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВремениДелоАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	лПараметры = Новый Структура;
	лПараметры.Вставить("БезЗавершенныхЗадач", Истина);
	
	МодульДел.Подбор(Текст, ДанныеВыбора, СтандартнаяОбработка, мВведенныйТекст, ПодобранныеЗначения, , лПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВремениДелоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	подобранноеЗначение = ПодобранныеЗначения[Текст];
	Если НЕ подобранноеЗначение = Неопределено Тогда
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(подобранноеЗначение);
	Иначе
		МодульДел.Подбор(Текст, ДанныеВыбора, СтандартнаяОбработка, мВведенныйТекст, ПодобранныеЗначения);
	КонецЕсли;
КонецПроцедуры

// ::::::::::::: ::::::::::::: :::::::::::::: ::::::::::::::::::: :::::::::::::: :::::::::::
// 

&НаКлиенте
Процедура Вчера(Команда)
	НадписьДата = ТекущаяДата() - 24 * 3600;
	ЗаполнитьТаблицуПоДате();
	
	ДатаВыполнения = НадписьДата;
	
	Элементы.Вчера.Пометка = Истина;
	Элементы.Сегодня.Пометка = Ложь;
КонецПроцедуры

&НаКлиенте                                                
Процедура Сегодня(Команда)
	//itl.ermakov [24.05.2012] {{
	ПереключитьсяНаТекущийДень();
	//}}itl.ermakov [24.05.2012]
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыполненияПриИзменении(Элемент)
	НадписьДата = ДатаВыполнения;
	ЗаполнитьТаблицуПоДате();
	
	Элементы.Вчера.Пометка = Ложь;
	Элементы.Сегодня.Пометка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Сегодня.Пометка = Истина;
	
	мНеВыполнятьКомандуПереходаВКонецТаблицы = Ложь;
КонецПроцедуры

&НаСервере
Процедура установитьПредыдущийКонец(ДатаКонца)
	таблица = РеквизитФормыВЗначение("ТаблицаВремени");
	Если таблица.Количество() > 1 Тогда
		предСтрока = таблица[таблица.Количество() - 2];
		предСтрока.Завершение = ДатаКонца;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(таблица, "ТаблицаВремени");
КонецПроцедуры // установитьНачальноеЗначениеДело()

&НаКлиенте
Процедура ТаблицаВремениСтартПриИзменении(Элемент)
	// Будем менять и конец для предыдущей строки
	// предполагаем, что в системе вводятся однозначные значения сроков
	// от начала и до конца
	текСтрока = ТаблицаВремени.НайтиПоИдентификатору(Элементы.ТаблицаВремени.ТекущаяСтрока);
	ДатаСтарта = текСтрока.Старт;
	
	Индекс = ТаблицаВремени.Индекс(текСтрока);
	Если Индекс > 0 Тогда
		ПредСтрока = ТаблицаВремени[Индекс-1];
		ПредСтрока.Завершение = ДатаСтарта;
	КонецЕсли;
	
	//установитьПредыдущийКонец(ДатаСтарта);
КонецПроцедуры

/////////////////////////////////////////////////////////
// Перетаскивание

&НаКлиенте
Процедура ТаблицаВремениПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	
	Если НЕ (ТипЗнч(ПараметрыПеретаскивания.Значение) = тип("структура")
		 И ПараметрыПеретаскивания.Значение.Свойство("Дело"))
		Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВремениПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	//itl.ermakov [24.05.2012] {{
	Если фПереключатьсяНаТекущийДеньПриПеретаскивании И НачалоДня(ТекущаяДата()) <> НачалоДня(ДатаВыполнения) Тогда
		ПереключитьсяНаТекущийДень();
	КонецЕсли;
	//}}itl.ermakov [24.05.2012]
	
	Элементы.ТаблицаВремени.ДобавитьСтроку();
	текДанные = Элементы.ТаблицаВремени.ТекущиеДанные;
	текДанные.Дело = ПараметрыПеретаскивания.Значение.Дело;
	текДанные.Проект = МодульДел.Проект(текДанные.Дело);
	
	мНеВыполнятьКомандуПереходаВКонецТаблицы = Истина;
	Элементы.ТаблицаВремени.ЗакончитьРедактированиеСтроки(Ложь);
	мНеВыполнятьКомандуПереходаВКонецТаблицы = Ложь;
	
	Оповестить("Дело_ИзмененСтатус");
	
КонецПроцедуры

/////////////////////////////////////////////////////////

&НаКлиенте
Функция ПереключитьсяНаТекущийДень() 
	//itl.ermakov [24.05.2012] {{
	
	ДатаВыполнения = ТекущаяДата();
	НадписьДата = ДатаВыполнения;
	
	Элементы.Вчера.Пометка = Ложь;
	Элементы.Сегодня.Пометка = Истина;
	
	ЗаполнитьТаблицуПоДате();	
	
	//}}itl.ermakov [24.05.2012]
КонецФункции

&НаСервере
Функция ЗаполнитьДополнительныеПараметры() 
	
	//itl.ermakov [24.05.2012] {{
	ПараметрыПользователя = Пользователи.ПолучитьНастройкиПользователя(текСотрудник);
	Если ПараметрыПользователя.Свойство("ВыполненныеДела_ПереключатьсяНаТекущийДень") Тогда
		фПереключатьсяНаТекущийДеньПриПеретаскивании = ПараметрыПользователя.ВыполненныеДела_ПереключатьсяНаТекущийДень; 
	КонецЕсли;
	//}}itl.ermakov [24.05.2012]
	
КонецФункции

&НаКлиенте
Процедура ТаблицаВремениПроектПриИзменении(Элемент)
	текДанные = Элементы.ТаблицаВремени.ТекущиеДанные;
	Если текДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	МодульДел.ОбновитьГруппуДел(текДанные.Дело, текДанные.Проект);
КонецПроцедуры

&НаКлиенте
Процедура КомандаКнопки(Команда)
	текданные = Элементы.ТаблицаВремени.ТекущиеДанные;
	
	лПараметры = Новый Структура;
	лПараметры.Вставить("имяКоманды", Команда.Имя);
	Если НЕ текданные = Неопределено Тогда
		лПараметры.Вставить("Дело", текданные.Дело);
	Иначе
		лПараметры.Вставить("Дело", Неопределено);
	КонецЕсли;
	
	СерверКомандаКнопки(лПараметры);
	
	Если лПараметры.Свойство("ВставитьДело") Тогда
		Элементы.ТаблицаВремени.ДобавитьСтроку();
		текДанные = Элементы.ТаблицаВремени.ТекущиеДанные;
		текДанные.Дело = лПараметры.ВставитьДело;
		текДанные.Проект = МодульДел.Проект(текДанные.Дело);
		
		Элементы.ТаблицаВремени.ЗакончитьРедактированиеСтроки(Ложь);
		Оповестить("Дело_ИзмененСтатус");
	ИначеЕсли лПараметры.Свойство("Обновить") Тогда
		ЗаполнитьИзбранныеКнопки();
	ИначеЕсли лПараметры.Свойство("ОткрытьСписок") Тогда
		П = Новый Структура;
		структураОтбора = Новый Структура("Владелец", лПараметры.ТекущийСотрудник);
		П.Вставить("Отбор", структураОтбора);
		
		формаСписка = ПолучитьФорму("Справочник.ИзбранныеДела.ФормаСписка", П);
		//формаСписка.Параметры.Отбор.Вставить("Владелец", лПараметры.ТекущийСотрудник);
		формаСписка.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СерверКомандаКнопки(пПараметры)
	Возврат Справочники.ИзбранныеДела.ОбработчикКоманды(пПараметры, текСотрудник);
КонецФункции // СерверКомандаКнопки()

&НаКлиенте
Процедура текСотрудникПриИзменении(Элемент)
	ЗаполнитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	ЗаполнитьФорму();
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьКлючОтчетаЗаДень(Параметры) 
	Запись = РегистрыСведений.СобытияДня.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Возврат Новый Структура("Ключ", РегистрыСведений.СобытияДня.СоздатьКлючЗаписи(Параметры));
	Иначе
		Возврат Параметры;
	КонецЕсли;			
КонецФункции

&НаКлиенте
Процедура СобытияДня(Команда)
	Ключ = СоздатьКлючОтчетаЗаДень(Новый Структура("Сотрудник, Период", текСотрудник, ДатаВыполнения));
	ОткрытьФорму("РегистрСведений.СобытияДня.ФормаЗаписи", Ключ);
КонецПроцедуры

/////////////////////////////////////////////////////////


