
Процедура ОповещенияПоПочте() Экспорт
	
	//////////////////////////////////////////////////////////////////////////////////////////
	// ФАКТ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|   Потрачено.Сотрудник КАК Исполнитель,
	|	Потрачено.Дело,
	|	СУММА(РАЗНОСТЬДАТ(Потрачено.Старт, Потрачено.Завершение, МИНУТА) / 60) КАК Длит
	|ПОМЕСТИТЬ СписокДел
	|ИЗ
	|	РегистрСведений.Дела КАК Потрачено
	|ГДЕ
	|	  День = &ДеньВчера
	|	И НЕ Потрачено.Дело.ЭтоВнепроектнаяЗадача
	|СГРУППИРОВАТЬ ПО
	|   Потрачено.Сотрудник,
	|	Потрачено.Дело
	|;
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДелаВчера.Исполнитель КАК Исполнитель,
	|	ДелаВчера.Дело.ГруппаДел КАК Проект,
	|	ДелаВчера.Дело КАК Задача,
	|	ДелаВчера.Длит КАК ПотраченоВчера,
	|	СУММА(РАЗНОСТЬДАТ(Потрачено.Старт, Потрачено.Завершение, МИНУТА) / 60) КАК Потрачено,
	|	ЕстьNULL(ДатыЗадач.ПланТрудозатрат, 0) КАК Оценка,
	|	ЕстьNULL(ДатыЗадач.ПлановаяДата, ДАТАВРЕМЯ(1,1,1)) КАК Срок
	|ИЗ
	|	СписокДел КАК ДелаВчера
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ДатыЗадач.СрезПоследних КАК ДатыЗадач
	|ПО
	|	ДелаВчера.Дело 			= ДатыЗадач.Дело
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.Дела КАК Потрачено
	|ПО
	|	ДелаВчера.Дело 			= Потрачено.Дело
	|
	|СГРУППИРОВАТЬ ПО
	|	ДелаВчера.Исполнитель,
	|	ДелаВчера.Дело.ГруппаДел,
	|	ДелаВчера.Дело,
	|	ДелаВчера.Длит,
	|	ДатыЗадач.ПланТрудозатрат,
	|	ДатыЗадач.ПлановаяДата
	|
	|ИТОГИ ПО 
	|	ДелаВчера.Исполнитель
	|";
	
	ДеньВчера = НачалоДня(ТекущаяДата() - 3600 * 24);
	Запрос.УстановитьПараметр("ДеньВчера", ДеньВчера);
	
	Результат = Запрос.Выполнить();
	ВыборкаСот = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ФактОтделаРазработки = "";
	
	Пока ВыборкаСот.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСот.Исполнитель) Тогда
			Продолжить;
		КонецЕсли;
		
		ФактОтделаРазработки = ФактОтделаРазработки + "=====================================================================" + Символы.ПС;
		ФактОтделаРазработки = ФактОтделаРазработки + "Потрачено вчера исполнителем " + ВыборкаСот.Исполнитель + Символы.ПС;
		
		Выборка = ВыборкаСот.Выбрать();
		Пока Выборка.Следующий() Цикл
			лПотраченоВчера = ?(ЗначениеЗаполнено(Выборка.Потрачено), Выборка.ПотраченоВчера, 0);
			лПотрачено = ?(ЗначениеЗаполнено(Выборка.Потрачено), Выборка.Потрачено, 0);
			лОсталось = ?(ЗначениеЗаполнено(Выборка.Оценка), Выборка.Оценка - лПотрачено, 0);
			лСрок = Формат(Выборка.Срок, "ДЛФ=DDT; ДП='Не ясно'");
			
			лПотраченоВчера = Формат(лПотраченоВчера, "ЧЦ=15; ЧДЦ=2; ЧН=");
			лПотрачено = Формат(лПотрачено, "ЧЦ=15; ЧДЦ=2; ЧН=");
			лОсталось = Формат(лОсталось, "ЧЦ=15; ЧДЦ=2; ЧН=");
			
			ФактОтделаРазработки = ФактОтделаРазработки + "
				| *** " + Выборка.Проект + "
				|  :: " + Выборка.Задача + "
				|     {Потрачено вчера: " + 
				лПотраченоВчера + " Потрачено Всего: " + лПотрачено + " Осталось: " + лОсталось + " План завершения: " + лСрок + "}" + Символы.ПС;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПрофилиПользователей.Емайл
	|ИЗ
	|	РегистрСведений.ПрофилиПользователей КАК ПрофилиПользователей
	|ГДЕ
	|	ПрофилиПользователей.ОтправлятьФакт";
	
	ВыборкаЕмайл = Запрос.Выполнить().Выбрать();
	
	Получатели = Неопределено;
	Пока ВыборкаЕмайл.Следующий() Цикл
		Если Получатели = Неопределено Тогда
			Получатели = ВыборкаЕмайл.Емайл;
		Иначе
			Получатели = Получатели + ", " + ВыборкаЕмайл.Емайл;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Получатели) Тогда
		Возврат;
	КонецЕсли;
	новоеПисьмо = Документы.Письмо.СоздатьДокумент();
	новоеПисьмо.Дата = ТекущаяДата();
	новоеПисьмо.Кому = Получатели;
	новоеПисьмо.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	новоеПисьмо.Тема = "Потрачено разработчиками за " + Формат(ДеньВчера, "ДЛФ=DD");
	новоеПисьмо.Текст = ФактОтделаРазработки;
	
	новоеПисьмо.Записать();
	новоеПисьмо = новоеПисьмо.Ссылка;
	стрОшибки = "";
	
	Если Документы.Письмо.ПослатьПисьмо(новоеПисьмо, стрОшибки) Тогда
		ЗаписьЖурналаРегистрации(
			"Письма.Отправление письма", 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.Письмо,
			новоеПисьмо,
			"Письмо успешно отправлено");
	Иначе
		ЗаписьЖурналаРегистрации(
			"Письма.Отправление письма", 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.Письмо,
			новоеПисьмо,
			"Письмо отправить не удалось:
				|" + стрОшибки);
	КонецЕсли;
	
	//////////////////////////////////////////////////////////////////////////////////////////
	// ПЛАН
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|   ПланДел.Исполнитель,
	|	ПланДел.СистемныйПриоритет,
	|	ПланДел.Статус,
	|	ПланДел.Дело
	|ПОМЕСТИТЬ СписокДел
	|ИЗ
	|	РегистрСведений.ЗадачиКВыполнению КАК ПланДел
	|ГДЕ
	|		Статус = Значение(Перечисление.Статус.КВыполнению)
	|	ИЛИ Статус = Значение(Перечисление.Статус.ВРаботе)
	|
	|;
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланДел.Исполнитель КАК Исполнитель,
	|	ПланДел.Статус КАК Статус,
	|	ПланДел.Дело.ГруппаДел КАК Проект,
	|	ПланДел.Дело КАК Задача,
	|	СУММА(РАЗНОСТЬДАТ(Потрачено.Старт, Потрачено.Завершение, МИНУТА) / 60) КАК Потрачено,
	|	ЕстьNULL(ДатыЗадач.ПланТрудозатрат, 0) КАК Оценка,
	|	ЕстьNULL(ДатыЗадач.ПлановаяДата, ДАТАВРЕМЯ(1,1,1)) КАК Срок
	|ИЗ
	|	СписокДел КАК ПланДел
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ДатыЗадач.СрезПоследних КАК ДатыЗадач
	|ПО
	|	ПланДел.Дело 			= ДатыЗадач.Дело
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.Дела КАК Потрачено
	|ПО
	|	ПланДел.Дело 			= Потрачено.Дело
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланДел.Исполнитель,
	|	ПланДел.Статус,
	|	ПланДел.Дело.ГруппаДел,
	|	ПланДел.Дело,
	|	ДатыЗадач.ПланТрудозатрат,
	|	ДатыЗадач.ПлановаяДата,
	|	ПланДел.СистемныйПриоритет
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланДел.СистемныйПриоритет
	|ИТОГИ ПО 
	|	ПланДел.Исполнитель
	|";
	
	Результат = Запрос.Выполнить();
	ВыборкаСот = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПланОтделаРазработки = "";
	
	ПределЗадачНаСотрудника = 10;
	
	Пока ВыборкаСот.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаСот.Исполнитель) Тогда
			Продолжить;
		КонецЕсли;
		
		ПланОтделаРазработки = ПланОтделаРазработки + "=====================================================================" + Символы.ПС;
		ПланОтделаРазработки = ПланОтделаРазработки + "План для " + ВыборкаСот.Исполнитель + Символы.ПС;
		лЗадачи = Новый Структура("ЗадачиВРаботе, ЗадачиКВыполнению", "", "");
		
		ид = 0;
		Выборка = ВыборкаСот.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Статус = Перечисления.Статус.ВРаботе Тогда
				статус = "ЗадачиВРаботе";
			ИначеЕсли Выборка.Статус = Перечисления.Статус.КВыполнению Тогда
				статус = "ЗадачиКВыполнению";
			КонецЕсли;
			
			лПотрачено = ?(ЗначениеЗаполнено(Выборка.Потрачено), Выборка.Потрачено, 0);
			лОсталось = ?(ЗначениеЗаполнено(Выборка.Оценка), Выборка.Оценка - лПотрачено, 0);
			лСрок = Формат(Выборка.Срок, "ДЛФ=DDT; ДП='Не ясно'");
			
			лПотрачено = Формат(лПотрачено, "ЧЦ=15; ЧДЦ=2; ЧН=");
			лОсталось = Формат(лОсталось, "ЧЦ=15; ЧДЦ=2; ЧН=");
			
			лЗадачи[статус] = лЗадачи[статус] + "
				| *** " + Выборка.Проект + "
				|  :: " + Выборка.Задача + "
				|     {Потрачено: " + 
				лПотрачено + " Осталось: " + лОсталось + " План завершения: " + лСрок + "}" + Символы.ПС;
			
			ид = ид + 1;
			Если ид > ПределЗадачНаСотрудника Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ПланОтделаРазработки = ПланОтделаРазработки + "<<В РАБОТЕ>>" + Символы.ПС;
		ПланОтделаРазработки = ПланОтделаРазработки + лЗадачи.ЗадачиВРаботе + Символы.ПС;
		ПланОтделаРазработки = ПланОтделаРазработки + "<<К ВЫПОЛНЕНИЮ>>" + Символы.ПС;
		ПланОтделаРазработки = ПланОтделаРазработки + лЗадачи.ЗадачиКВыполнению + Символы.ПС + Символы.ПС;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПрофилиПользователей.Емайл
	|ИЗ
	|	РегистрСведений.ПрофилиПользователей КАК ПрофилиПользователей
	|ГДЕ
	|	ПрофилиПользователей.ОтправлятьПлан";
	
	ВыборкаЕмайл = Запрос.Выполнить().Выбрать();
	
	Получатели = Неопределено;
	Пока ВыборкаЕмайл.Следующий() Цикл
		Если Получатели = Неопределено Тогда
			Получатели = ВыборкаЕмайл.Емайл;
		Иначе
			Получатели = Получатели + ", " + ВыборкаЕмайл.Емайл;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Получатели) Тогда
		Возврат;
	КонецЕсли;
	новоеПисьмо = Документы.Письмо.СоздатьДокумент();
	новоеПисьмо.Дата = ТекущаяДата();
	новоеПисьмо.Кому = Получатели;
	новоеПисьмо.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	новоеПисьмо.Тема = "План задач разработчиков на " + Формат(ТекущаяДата(), "ДЛФ=DD");
	новоеПисьмо.Текст = ПланОтделаРазработки;
	
	новоеПисьмо.Записать();
	новоеПисьмо = новоеПисьмо.Ссылка;
	стрОшибки = "";
	
	Если Документы.Письмо.ПослатьПисьмо(новоеПисьмо, стрОшибки) Тогда
		ЗаписьЖурналаРегистрации(
			"Письма.Отправление письма", 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.Письмо,
			новоеПисьмо,
			"Письмо успешно отправлено");
	Иначе
		ЗаписьЖурналаРегистрации(
			"Письма.Отправление письма", 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Документы.Письмо,
			новоеПисьмо,
			"Письмо отправить не удалось:
				|" + стрОшибки);
	КонецЕсли;
	
	Возврат;
	
	///////////////////////////////////////////////////////////////////////////////////
	// БУФЕР
	
	Запрос = Новый Запрос("ВЫБРАТЬ Письмо ИЗ РегистрСведений.БуферПочтыДляОтправки ГДЕ ДатаОшибки = &ПустаяДата");
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗаписьЖурналаРегистрации(
				"Письма.Сканирование писем", 
				УровеньЖурналаРегистрации.Информация,
				Метаданные.Документы.Письмо,
				,
				"Письма для отправки в количестве " + Выборка.Количество() + " шт.");
	
	Пока Выборка.Следующий() Цикл
		
		Рег = РегистрыСведений.БуферПочтыДляОтправки.СоздатьМенеджерЗаписи();
		Рег.Письмо = Выборка.Письмо;
		
		стрОшибки = "";
		Если Документы.Письмо.ПослатьПисьмо(Выборка.Письмо, стрОшибки) Тогда
			
			ЗаписьЖурналаРегистрации(
				"Письма.Отправление письма", 
				УровеньЖурналаРегистрации.Информация,
				Метаданные.Документы.Письмо,
				Выборка.Письмо,
				"Письмо успешно отправлено");
				
			Рег.Удалить();
				
		Иначе
			
			ЗаписьЖурналаРегистрации(
				"Письма.Отправление письма", 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.Письмо,
				Выборка.Письмо,
				"Письмо отправить не удалось:
					|" + стрОшибки);
					
			Рег.ДатаОшибки 	= ТекущаяДата();
			Рег.Ошибка 		= стрОшибки;
			Рег.Записать();
				
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнтеграцияСМантисом() Экспорт
	МантисКлиентСервер.ОбновитьВсеПроектыИзМантиса();
КонецПроцедуры
