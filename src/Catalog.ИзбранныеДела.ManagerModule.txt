
Функция ЗаполнитьКнопки(пЭлементы, пКоманды, пКоманднаяПанель, пСотрудник = Неопределено) Экспорт 
		
	Если пСотрудник = Неопределено Тогда
		пСотрудник = ПараметрыСеанса.ТекущийСотрудник;
	КонецЕсли;
	
	имяКоманды = "ОсновноеПодменюИзбранных";
	
	пГруппа = пЭлементы.Найти(имяКоманды);
	Если пГруппа = Неопределено Тогда
		пГруппа = пЭлементы.Добавить(имяКоманды, Тип("ГруппаФормы"), пКоманднаяПанель);
		пГруппа.Вид = ВидГруппыФормы.Подменю;
		пГруппа.Заголовок = "Избранные";
	КонецЕсли;
	
	//itl.ermakov [06.08.2012] {{
	МассивЭлементовНаУдаление = Новый Массив;
	Для Каждого пЭлемент Из пГруппа.ПодчиненныеЭлементы Цикл
		МассивЭлементовНаУдаление.Добавить(пЭлемент);
	КонецЦикла;
	РекурсивноУдалитьКомандыКнопок(пГруппа, пКоманды);
	Для Каждого пЭлемент Из МассивЭлементовНаУдаление Цикл
		пЭлементы.Удалить(пЭлемент);			
	КонецЦикла;
	//}}itl.ermakov [06.08.2012	
	
	имяКоманды = "ГруппаУправленияИзбранным";
	текГруппа = пЭлементы.Найти(имяКоманды);
	Если текГруппа = Неопределено Тогда
		текГруппа = пЭлементы.Добавить(имяКоманды, Тип("ГруппаФормы"), пГруппа);
		текГруппа.Вид = ВидГруппыФормы.ГруппаКнопок;
	КонецЕсли;
	
	Если пЭлементы.Найти("ВставитьВИзбранные") = Неопределено Тогда
		имяКоманды = "ВставитьВИзбранные";
		
		текКоманда = пКоманды.Добавить(имяКоманды);
		текКоманда.Действие = "КомандаКнопки";
		текКоманда.Заголовок = "Добавить в избранные";
		
		текКнопка = пЭлементы.Добавить(имяКоманды, Тип("КнопкаФормы"), текГруппа);
		текКнопка.ИмяКоманды = имяКоманды;
	КонецЕсли;
	Если пЭлементы.Найти("УправлятьИзбранным") = Неопределено Тогда
		имяКоманды = "УправлятьИзбранным";
		
		текКоманда = пКоманды.Добавить(имяКоманды);
		текКоманда.Действие = "КомандаКнопки";
		текКоманда.Заголовок = "Управление избранным";
		
		текКнопка = пЭлементы.Добавить(имяКоманды, Тип("КнопкаФормы"), текГруппа);
		текКнопка.ИмяКоманды = имяКоманды;
	КонецЕсли;
	
	// Группа - командная панель
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИзбранныеДела.Ссылка КАК Ссылка,
	|	ИзбранныеДела.Код КАК Код,
	|	ВЫБОР 	КОГДА ИзбранныеДела.ЭтоГруппа 
	|			ТОГДА ИзбранныеДела.Наименование 
	|			ИНАЧЕ ИзбранныеДела.Дело.Наименование 
	|	КОНЕЦ КАК Заголовок,
	|	ИзбранныеДела.Родитель КАК Родитель,
	|	ИзбранныеДела.ЭтоГруппа КАК ЭтоГруппа
	|ИЗ
	|	Справочник.ИзбранныеДела КАК ИзбранныеДела
	|ГДЕ
	|	ИзбранныеДела.Владелец = &Пользователь
	|УПОРЯДОЧИТЬ ПО
 	|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("Пользователь", пСотрудник);
	
	Результат = Запрос.Выполнить();
	ДеревоЗначений = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДеревоЗначений.Строки.Сортировать("ЭтоГруппа, Заголовок", Истина);
		
	РекурсивноДобавитьКнопки(пЭлементы, пКоманды, пГруппа, ДеревоЗначений);
КонецФункции // ЗаполнитьКнопки()

Функция РекурсивноУдалитьКомандыКнопок(пГруппа, пКоманды) 
	Если ТипЗнч(пГруппа) = Тип("ГруппаФормы") Тогда
		Для Каждого Элемент Из пГруппа.ПодчиненныеЭлементы Цикл
			Команда = пКоманды.Найти(Элемент.Имя);
			Если Команда <> Неопределено Тогда
				пКоманды.Удалить(Команда);
			КонецЕсли;
			РекурсивноУдалитьКомандыКнопок(Элемент, пКоманды);
		КонецЦикла;
	КонецЕсли;
КонецФункции

Функция РекурсивноДобавитьКнопки(пЭлементы, пКоманды, ЗНАЧ пГруппа, ЗНАЧ СтрокиДерева)
	Для каждого лСтрокаДерева Из СтрокиДерева.Строки Цикл
		имяКоманды = "_" + лСтрокаДерева.Код;
		
		Если лСтрокаДерева.ЭтоГруппа Тогда
			текГруппа = пЭлементы.Найти(имяКоманды);
			Если текГруппа = Неопределено Тогда
				текГруппа = пЭлементы.Добавить(имяКоманды, Тип("ГруппаФормы"), пГруппа);
				текГруппа.Вид = ВидГруппыФормы.Подменю;
				текГруппа.Заголовок = лСтрокаДерева.Заголовок;
			КонецЕсли;
			
			РекурсивноДобавитьКнопки(пЭлементы, пКоманды, текГруппа, лСтрокаДерева);
		Иначе
			Если пЭлементы.Найти(имяКоманды) = Неопределено Тогда
				текКоманда = пКоманды.Добавить(имяКоманды);
				текКоманда.Действие = "КомандаКнопки";
				текКоманда.Заголовок = лСтрокаДерева.Заголовок;
				
				текКнопка = пЭлементы.Добавить(имяКоманды, Тип("КнопкаФормы"), пГруппа);
				текКнопка.ИмяКоманды = имяКоманды;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецФункции // РекурсивноДобавитьКнопки()

Функция ОбработчикКоманды(пПараметры, пСотрудник = Неопределено) Экспорт 
	
	Если пСотрудник = Неопределено Тогда
		пСотрудник = ПараметрыСеанса.ТекущийСотрудник;
	КонецЕсли;
	
	Если Лев(пПараметры.ИмяКоманды, 1) = "_" Тогда
		кодИзбранного = Сред(пПараметры.ИмяКоманды, 2);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ИзбранныеДела.Дело
		|ИЗ
		|	Справочник.ИзбранныеДела КАК ИзбранныеДела
		|ГДЕ
		|	ИзбранныеДела.Код = &Код";
		
		Запрос.УстановитьПараметр("Код", кодИзбранного);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			пПараметры.Вставить("ВставитьДело", Выборка.Дело);
		КонецЕсли;
	ИначеЕсли пПараметры.ИмяКоманды = "ВставитьВИзбранные" Тогда
		Если НЕ ЗначениеЗаполнено(пПараметры.Дело) Тогда
			Возврат Ложь;
		КонецЕсли;
		
		новыйЭлемент = Справочники.ИзбранныеДела.СоздатьЭлемент();
		новыйЭлемент.Дело = пПараметры.Дело;
		новыйЭлемент.Владелец = пСотрудник;
		новыйЭлемент.Записать();
		
		пПараметры.Вставить("Обновить", Истина);
	ИначеЕсли пПараметры.ИмяКоманды = "УправлятьИзбранным" Тогда
		пПараметры.Вставить("ТекущийСотрудник", пСотрудник);
		пПараметры.Вставить("ОткрытьСписок", Истина);
	КонецЕсли;
КонецФункции // ОбработчикКоманды()